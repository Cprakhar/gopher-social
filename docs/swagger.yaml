basePath: /v1
definitions:
  handler.CreateUserPayload:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  handler.FollowUserPayload:
    properties:
      user_id:
        type: string
    required:
    - user_id
    type: object
  handler.UpdatePostPayload:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  store.Comment:
    properties:
      author_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/store.User'
    type: object
  store.Post:
    properties:
      author_id:
        type: string
      comments:
        items:
          $ref: '#/definitions/store.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/store.User'
      version:
        type: integer
    type: object
  store.PostWithMetadata:
    properties:
      author_id:
        type: string
      comments:
        items:
          $ref: '#/definitions/store.Comment'
        type: array
      comments_count:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/store.User'
      version:
        type: integer
    type: object
  store.User:
    properties:
      activated:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a server for a social media application called Gopher Social.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Gopher Social API
paths:
  /feed:
    get:
      consumes:
      - application/json
      description: get a user's feed with pagination
      parameters:
      - default: 20
        description: number of posts to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: number of posts to skip
        in: query
        name: offset
        type: integer
      - default: desc
        description: sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.PostWithMetadata'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: get user feed
      tags:
      - feed
  /health:
    get:
      consumes:
      - application/json
      description: get the health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: health check
      tags:
      - health
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete a post by id
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: get a post by id
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Post'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: get a post
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: update a post by id
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      - description: post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.UpdatePostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: update a post
      tags:
      - posts
  /users:
    post:
      consumes:
      - application/json
      description: register a new user
      parameters:
      - description: user payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: register a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: get a user by id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
      security:
      - ApiKeyAuth: []
      summary: get a user
      tags:
      - users
  /users/{id}/follow:
    post:
      consumes:
      - application/json
      description: follow a user by id
      parameters:
      - description: user id to follow
        in: path
        name: id
        required: true
        type: string
      - description: follow user payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.FollowUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: follow a user
      tags:
      - users
  /users/{id}/unfollow:
    post:
      consumes:
      - application/json
      description: unfollow a user by id
      parameters:
      - description: user id to unfollow
        in: path
        name: id
        required: true
        type: string
      - description: unfollow user payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.FollowUserPayload'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: unfollow a user
      tags:
      - users
  /users/activate/{token}:
    put:
      consumes:
      - application/json
      description: activate a user using the token sent via email
      parameters:
      - description: activation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: activate a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
